version: '3'

services:
  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - {{FOLDER_APP_SETTINGS}}/nginx-proxy-manager/data:/data
      - {{FOLDER_APP_SETTINGS}}/nginx-proxy-manager/letsencrypt:/etc/letsencrypt

  portainer:
    image: portainer/portainer-ce
    container_name: portainer-ce
    restart: unless-stopped
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - {{FOLDER_APP_SETTINGS}}/portainer:/data
    ports:
      - 9000:9000

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - VERSION=docker
      - PUID=1000
      - PGID=1000
      - PLEX_CLAIM={{PLEX_CLAIM}}
      - TZ=Europe/Paris
    network_mode: host
    volumes:
      - {{FOLDER_APP_SETTINGS}}/plex/config:/config
      - {{FOLDER_APP_SETTINGS}}/plex/transcode:/transcode
      - {{FOLDER_RCLONE}}:/rclone
    restart: unless-stopped
    depends_on:
      - pdrcrd

  pdrcrd:
    container_name: pdrcrd
    image: iampuid0/pdrcrd:latest  
    stdin_open: true # docker run -i
    tty: true        # docker run -t    
    volumes:
      - {{FOLDER_APP_SETTINGS}}/pdrcrd/config:/config
      - {{FOLDER_APP_SETTINGS}}/pdrcrd/log:/log
      - {{FOLDER_RCLONE}}:/data:shared
    environment:
      - TZ=Europe/Paris
      - RD_API_KEY={{RD_API_KEY}}
      - RCLONE_MOUNT_NAME=realdebrid
      - RCLONE_DIR_CACHE_TIME=10s
      - PLEX_USER={{PLEX_USER}}
      - PLEX_TOKEN={{RD_TOKEN_PLEX}}
      - PLEX_ADDRESS={{PLEX_ADDRESS}}
      - SHOW_MENU=false
    network_mode: "service:wireguard"
    devices:
      - /dev/fuse:/dev/fuse:rwm
    cap_add:
      - SYS_ADMIN   
    security_opt:
      - apparmor:unconfined    
      - no-new-privileges
    restart: unless-stopped
    depends_on:
      - wireguard   

  overseerr:
    image: lscr.io/linuxserver/overseerr
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - VERSION=latest
    volumes:
      - {{FOLDER_APP_SETTINGS}}/overseerr/config:/config
    ports:
      - 5055:5055
    restart: unless-stopped     

  tautulli:
    image: lscr.io/linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - {{FOLDER_APP_SETTINGS}}/tautulli/config:/config
    ports:
      - 8181:8181
    restart: unless-stopped        

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris        
    volumes:
      - {{FOLDER_APP_SETTINGS}}/jackett/config:/config
      - {{FOLDER_APP_SETTINGS}}/jackett/blackhole/:/downloads   
    ports:
      - 9117:9117      
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    security_opt:
      - no-new-privileges:true    
    environment:
      - TZ=Europe/Paris  
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}      
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}       
    restart: unless-stopped

  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - TZ=Europe/Paris
    volumes:
      - {{FOLDER_APP_SETTINGS}}/wireguard/config:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    #ports:
      #- 51820:51820/udp
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: "Europe/Paris"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "true"
      WATCHTOWER_SCHEDULE: "0 0 4 * * *"

networks:
  your_custom_network:
    driver: bridge
